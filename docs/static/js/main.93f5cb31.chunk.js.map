{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","propType","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAVU,SAACC,GACjBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,MAMlB,SAEI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,aA4B/BZ,EAAYiB,SAAW,CACnBhB,cAAgBiB,IAAUC,KAAKC,Y,mCCtCtBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEDI,MAAOF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAQF,EAAIE,MACZV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QATxB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECJwB,SAACA,GACzB,MAA0BpB,mBAAS,CAC/B2B,KAAM,GACNa,SAAU,IAFd,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAOkB,EACPL,SAAU,SAGxB,CAACpB,IAIIqB,EDduBK,CAAa1B,GAA/Ba,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAEnB,OACI,qCACI,6BAAKpB,IACL,6BAAKoB,EAAU,cAAgB,KAC/B,qBAAKJ,UAAU,YAAf,SAIOH,EAAOJ,KAAI,SAAAC,GAAG,OACT,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEfxBgB,EAAe,SAAAC,GAGxB,MAAoChD,mBAAS,CAAC,cAA9C,mBAAOiD,EAAP,KAAmBlD,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQkD,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MChBjC8B,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.93f5cb31.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=>{\r\n        console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit =(e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats=> [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            \r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}  \r\n                onChange={handleInputChange}          \r\n            ></input>\r\n            \r\n        </form>\r\n    )\r\n\r\n\r\n    \r\n}\r\n\r\nAddCategory.propType = {\r\n    setCategories : PropTypes.func.isRequired\r\n}","export const getGifs = async (category) =>{\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=y35gA6fc4qVWIvlkQZHDiWYVD8DmnFgG`;\r\n    const resp =await fetch (url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id: img.id,\r\n            title : img.title,\r\n            url : img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    \r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    // console.log(id, title, url)\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useFetchGifs} from '../hooks/useFetchGifs'\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data:images,loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            <h3>{loading ? 'Cargando...' : ''}</h3>\r\n            <div className=\"card-grid\">\r\n                \r\n                \r\n                {\r\n                   images.map(img=>(\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        \r\n                        />\r\n                    ))\r\n                }\r\n                \r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState,useEffect} from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const [state, setState] = useState({\r\n        data :[],\r\n        loading : true\r\n    });\r\n    \r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then(imgs=>{\r\n                setState({\r\n                    data : imgs,\r\n                    loading : false\r\n                });\r\n            });\r\n    },[category])\r\n\r\n\r\n\r\n    return state;\r\n}","import React,{useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = props => {\r\n   \r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'] \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = ()=>{\r\n    //     setCategories(cats=> [...cats,\"HunterXHunter\"]);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr></hr>\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map(category=>(\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category} \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp'\nimport './index.css';\n\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}